- gradle
[ Gradle ]
    1. 정의 : 오픈 소스 빌드 자동화 시스템, 즉] 외부 라이브러리들을 자동적으로 설치하고 관리 해준다.
    2. 실무 : gradle, Maven 같은 빌드 자동화 도구 사용한다.
    3. 목적 : gradle 이용한 다양한 오픈 소스 라이브러리들을 사용
    4. [ Gradle 프로젝트 생성 ] 주의할점 : 자바 프로젝트 아니다.
    5. 외부 라이브러리 들을 프로젝트에 설치/관리 하는 방법
        1. 프로젝트 폴더내 'build.gradle' 파일 클릭한다.
            [ 초기 세팅 ] http://start.spring.io/ 여기에서 초기 세팅하기
        2. dependencies : 의존성 뜻 : 현재 프로젝트에 추가할 라이브러리 gradle 코드
        3. 오픈 소스 gradle 코드 찾기
            1. http://start.spring.io/
            2. https://mvnrepository.com/

----------------------------------------------------------------------------------------------------------
API 명세서
[ boardservice13 ]
[ 개발 순서 ]
1. 프로젝트 사용할 라이브러리들을 생각. 그레이들 의존성
    spring web, mysql
2. 프로젝트의 MVC 패턴 패키지 구성
    controller 패키지
    model 패키지
        -dao 패키지
        -dto 패키지
    AppStart 클래스
3. 데이터베이스 설계
4. 데이터베이스에 따라 DTO 만들기
5. controller, dao 만들기

    1. 기능 단위 구현 : 게시물쓰기, 게시물전체조회, 게시물개별조회, 게시물수정, 게시물삭제

[ 게시물 쓰기 ]                              매개변수와 반환 타입                 HTTP method mapping            매개변수 전송방법                    URL(웹주소)
    매개변수 : 제목, 내용, 작성자, 비밀번호    = BoardDto                              @PostMapping              body @RequestBody                 /write
    반환값을 값 : 쓰기 성공/실패              = boolean

[ 게시물전체조회 ]
    매개변수 : x                                                                    @GetMapping              QueryString @RequestParam          /findAll
    반환값을 값 : 여러개(ArrayList) 게시물(BoardDto) = ArrayList(BoardDto)

[ 게시문개별조회 ]
    매개변수 : 조회할 게시물번호                         = int bno                     @GetMapping               QueryString @RequestParam          /findId
    반환값을 값 : 조회한 하나의 게시물정보 또는 없으면 null  = BoardDto

[ 게시물 삭제 ]
    매개변수 : 삭제할 게시물 번호                       = int                           @DeleteMapping           QueryString @RequestParam          /delete
    반환값을 값 : 삭제를 성공 true / 실패 false         = boolean

[ 게시물수정 ]
    매개변수 : 수정할 대상 번호, 새로운 제목, 새로운 내용 = BoardDto                         @PutMapping             body @RequestBody                   /update
    반환값을 값 : 수정을 성공 true / 실패 false         = boolean

    https://docs.google.com/spreadsheets/d/1Q-S-XKQ7TMGUGZnpgFxDvbnEmuGxQNwRWO4PJr6JB4k/edit?gid=0#gid=0

    복습과제 : day54 day55, 'boardservice13' 패키지와 resoures board.html 를 따라치기 3번
   활용과제 : '나만의 할일 목록'를 JAVA와 연동하여 영구저장 되도록 구현
    1. day50 에서 작성한 '나만의 할일 목록' html, css, js 활용
    2. '나만의 할일 목록'의 Controller, Dao 구성해서 fetch  통신하기